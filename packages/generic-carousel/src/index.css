/* You can override these variables in a more specific scope */
:root {
  --gc-item-width: 320px;
  --gc-item-height: 260px;
  --gc-item-padding: 20px;
  --gc-animation-easing: ease-in-out;
  --gc-animation-speed: 0.2s;
  --gc-inactive-scale: 0.8;
}

.gc-carousel {
  font-family: "Ropa Sans", Arial, Helvetica, sans-serif;
  color: rgba(12, 82, 136);
  height: 364px;
}
.gc-inner {
  position: relative;
  overflow: hidden;
  height: 100%;
}
.gc-controls {
  position: absolute;
  z-index: 1;
  width: 180px;
  left: calc(50% - 60px);
  bottom: 0px;
  border: none;
}
.gc-legend {
  display: none;
}
.gc-control {
  background-color: rgba(12, 82, 136);
  color: #fff;
  border: none;
  border-radius: 6px;
  font-size: 100%;
  /* this is weird ... there is no "bold" Ropa Sans */
  font-weight: bold;
  padding: 4px 16px;
}
.gc-control-prev {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.gc-control-next {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
/*
        NOTE:
          using `calc()` _and_ `var()` does not work in pre-chromium Edge. One
          alternative would be to avoid `var()` altogether, especially with
          something like Sass, which would then just output the hard-coded
          values without needing this stuff.
          In Chromium Edge (and there have actually been a couple of releases
          already!) this is all fine, but that version is still "opt in".
      */
.gc-items {
  background-color: #fff;
  width: calc(var(--gc-item-width) * 6);
  display: flex;
  padding-top: 20px;
  padding-bottom: 20px;
  padding-left: 50%;
  padding-right: 50%;
  transform: translateX(calc(-0.5 * var(--gc-item-width)));
  transition: all var(--gc-animation-easing) var(--gc-animation-speed);
  counter-reset: gc-item;
}
/*
        This [data-active] stuff is probably pointless, and we could just use
        nth-child instead, but it
      */
.gc-carousel[data-active="1"] .gc-items {
  transform: translateX(calc(-1.5 * var(--gc-item-width)));
}
.gc-carousel[data-active="2"] .gc-items {
  transform: translateX(calc(-2.5 * var(--gc-item-width)));
}
.gc-carousel[data-active="3"] .gc-items {
  transform: translateX(calc(-3.5 * var(--gc-item-width)));
}
.gc-carousel[data-active="4"] .gc-items {
  transform: translateX(calc(-4.5 * var(--gc-item-width)));
}
.gc-carousel[data-active="5"] .gc-items {
  transform: translateX(calc(-5.5 * var(--gc-item-width)));
}
.gc-item {
  display: flex;
  justify-content: space-between;
  flex-direction: column;
  width: var(--gc-item-width);
  height: 260px;
  padding: 0 10px;
  opacity: 0.6;
  transition: opacity var(--gc-animation-easing) var(--gc-animation-speed);
}
.gc-item--active {
  opacity: 1;
}

.gc-item--active .gc-a {
  transform: scale(1);
}
.gc-item--active .gc-img {
  box-shadow: 0 0 8px #000;
}
.gc-item-number::before {
  position: absolute;
  top: 30px;
  padding-left: 20px;
  color: white;
  counter-increment: gc-item;
  content: counter(gc-item);
  font-size: 120%;
  text-shadow: 0 0 8px rgba(0, 0, 0, 0.5);
}
.gc-image {
  flex-grow: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgb(69, 190, 142); /* 69,190,142 */
  padding: 20px;
}
.gc-a {
  display: flex;
  align-items: center;
  transform: scale(var(--gc-inactive-scale));
  transition: all var(--gc-animation-easing) var(--gc-animation-speed);
  max-width: 100%;
  height: calc(var(--gc-item-height) - 80px);
  transform-origin: 50% 50%;
}
.gc-a:focus,
.gc-a:active {
  outline: none;
}

.gc-img {
  max-width: 100%;
  max-height: 100%;
  box-shadow: 0 0 0 #000;
}
.gc-item-title {
  margin: 6px 0 0;
}
