/* You can override these variables in a more specific scope */
:root {
  --gc-color-primary: rgb(12, 82, 136);
  --gc-color-secondary: rgb(69, 190, 142);
  --gc-color-black: rgba(0, 0, 0);
  --gc-color-black-faded: rgba(0, 0, 0, 0.5);
  --gc-color-white: rgb(255, 255, 255);
  --gc-color-white-faded: rgba(255, 255, 255, 0.5);

  --gc-color-items-bg: var(--gc-color-white);
  --gc-color-control-text: var(--gc-color-white);
  --gc-color-shadow: var(--gc-color-black);
  --gc-color-shadow-faded: var(--gc-color-black-faded);

  --gc-height: 346px;
  --gc-item-width: 320px;
  --gc-item-height: calc(var(--gc-height) - 86px);
  --gc-item-padding: 20px;
  --gc-animation-easing: ease-in-out;
  --gc-animation-speed: 0.2s;
  --gc-inactive-scale: 0.8;

  /*
    This "breakpoint size" is useless, but left here until this project moves to
    Sass, or CSS Environment Variables Level 2 is generally available:
    https://github.com/w3c/csswg-drafts/issues/2627
   */
  --gc--mobile: 576px;
}

.gc-carousel {
  box-sizing: content-box;
  font-family: "Ropa Sans", Arial, Helvetica, sans-serif;
  color: var(--gc-color-primary);
  height: var(--gc-height);
}
.gc-inner {
  position: relative;
  overflow: hidden;
  height: 100%;
  max-width: 100%;
}
.gc-controls {
  position: absolute;
  z-index: 1;
  width: 180px;
  left: calc(50% - 60px);
  bottom: 0px;
  border: none;
  margin: 0;
  padding: 0;
}
.gc-legend {
  display: none;
}
.gc-control {
  background-color: var(--gc-color-primary);
  color: var(--gc-color-control-text);
  border: none;
  border-radius: 6px;
  font-size: 100%;
  /* this is weird ... there is no "bold" Ropa Sans */
  font-weight: bold;
  padding: 4px 16px;
}
.gc-control-prev {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.gc-control-next {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
/*
  NOTE:
    using `calc()` _and_ `var()` does not work in pre-chromium Edge. One
    alternative would be to avoid `var()` altogether, especially with
    something like Sass, which would then just output the hard-coded
    values without needing this stuff.
    In Chromium Edge (and there have actually been a couple of releases
    already!) this is all fine, but that version is still "opt in".
*/
.gc-items {
  background-color: var(--gc-color-items-bg);
  width: calc(var(--gc-item-width) * 6);
  height: calc(var(--gc-height) - var(--gc-item-padding));
  display: flex;
  padding-top: var(--gc-item-padding);
  padding-bottom: var(--gc-item-padding);
  padding-left: 50%;
  padding-right: 50%;
  transform: translateX(calc(-0.5 * var(--gc-item-width)));
  transition: all var(--gc-animation-easing) var(--gc-animation-speed);
  counter-reset: gc-item;
}
/*
  This [data-active] stuff is probably pointless, and we could just use
  nth-child instead, but it
*/
.gc-carousel[data-active="1"] .gc-items {
  transform: translateX(calc(-1.5 * var(--gc-item-width)));
}
.gc-carousel[data-active="2"] .gc-items {
  transform: translateX(calc(-2.5 * var(--gc-item-width)));
}
.gc-carousel[data-active="3"] .gc-items {
  transform: translateX(calc(-3.5 * var(--gc-item-width)));
}
.gc-carousel[data-active="4"] .gc-items {
  transform: translateX(calc(-4.5 * var(--gc-item-width)));
}
.gc-carousel[data-active="5"] .gc-items {
  transform: translateX(calc(-5.5 * var(--gc-item-width)));
}
.gc-item {
  display: flex;
  justify-content: space-between;
  flex-direction: column;
  width: var(--gc-item-width);
  height: var(--gc-item-height);
  padding: 0 calc(var(--gc-item-padding) / 2);
  opacity: 0.6;
  transition: opacity var(--gc-animation-easing) var(--gc-animation-speed);
}
.gc-item--active {
  opacity: 1;
}

.gc-item--active .gc-a {
  transform: scale(1);
}
.gc-item--active .gc-img {
  box-shadow: 0 0 8px var(--gc-color-shadow);
}
.gc-item-number::before {
  position: absolute;
  top: 30px;
  padding-left: var(--gc-item-padding);
  color: white;
  counter-increment: gc-item;
  content: counter(gc-item);
  font-size: 120%;
  text-shadow: 0 0 8px var(--gc-color-shadow-faded);
}
.gc-image {
  flex-grow: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--gc-color-secondary);
  padding: var(--gc-item-padding);
  height: calc(var(--gc-item-height) - var(--gc-item-padding) * 4);
}
.gc-a {
  display: flex;
  align-items: center;
  transform: scale(var(--gc-inactive-scale));
  transition: all var(--gc-animation-easing) var(--gc-animation-speed);
  transform-origin: 50% 50%;
}
.gc-a:focus,
.gc-a:active {
  outline: none;
}

.gc-img {
  max-height: calc(var(--gc-item-height) * var(--gc-inactive-scale));
  max-width: 100%;
  box-shadow: 0 0 0 var(--gc-color-shadow);
}
.gc-item-title {
  margin: 6px 0 0;
}

@media (max-width: 576px) {
  :root {
    --gc-height: 280px;
    --gc-item-padding: 0;
    --gc-arrow-width: 30px;
    --gc-arrow-height: 60px;
  }
  .gc-controls {
    top: 0;
    left: 0;
    width: 100%;
  }
  .gc-control {
    color: transparent;
    padding: 0;
    margin: 0;
    position: absolute;
    width: calc(2 * var(--gc-arrow-height));
    height: calc(2 * var(--gc-arrow-height));
    top: calc(50% - var(--gc-arrow-height));
    background: var(--gc-color-white-faded);
    border-radius: 50%;
  }
  .gc-control::before {
    content: "";
    position: absolute;
    width: var(--gc-arrow-width);
    height: var(--gc-arrow-height);
    mask: url('data:image/svg+xml;utf8,<svg version="1.1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="37.6px" height="62.6px" viewBox="0 0 37.6 62.6"><g><path d="M3.5,2.1C13.3,12,23.1,20,32.8,29.9C23.1,39.9,13.3,48,3.5,58.1c0-5,0-8,0-13c5.3-4.8,10.6-9.5,16.6-14.9 c-6-5.5-11.3-10.3-16.6-15.1C3.5,10.1,3.5,7.1,3.5,2.1z"/></g></svg>');
    background-color: var(--gc-color-primary);
    transform-origin: center;
    top: calc(50% - var(--gc-arrow-height) / 2);
  }
  .gc-control-prev {
    left: calc(5px - var(--gc-arrow-height));
  }
  .gc-control-next {
    right: calc(5px - var(--gc-arrow-height));
  }
  .gc-control-prev::before {
    transform: rotate(180deg);
    left: 60px;
  }
  .gc-control-next::before {
    right: 60px;
  }
  .gc-item-number::before {
    content: "";
    display: none;
  }

  .gc-items {
    padding-top: 0;
    padding-bottom: 0;
  }
}
